
// MitacsGUI.cpp: 定义应用程序的类行为。
//

#include "pch.h"
#include "framework.h"
#include "MitacsGUI.h"
#include "MitacsGUIDlg.h"
//#include "Global_variables.h"
//#include "constants.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CMitacsGUIApp

BEGIN_MESSAGE_MAP(CMitacsGUIApp, CWinApp)
	ON_COMMAND(ID_HELP, &CWinApp::OnHelp)
END_MESSAGE_MAP()


// CMitacsGUIApp 构造

CMitacsGUIApp::CMitacsGUIApp()
{
	// Support restarting the manager

	m_dwRestartManagerSupportFlags = AFX_RESTART_MANAGER_SUPPORT_RESTART;

	// TODO: add construction code here,
//initializing variables for the first time, trying to force this file to be the place of the first definition
	
}


// 唯一的 CMitacsGUIApp 对象

CMitacsGUIApp theApp;


// CMitacsGUIApp 初始化

BOOL CMitacsGUIApp::InitInstance()
{
	// If an application manifest running on Windows XP specifies
// Use ComCtl32.dll version 6 or higher to enable visualization,
//You need InitCommonControlsEx(). Otherwise, the window cannot be created.


	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// Set it to include all you want to use in the application
// Public control class.


	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinApp::InitInstance();


	AfxEnableControlContainer();

	// Create a shell manager in case the dialog contains
// Any shell tree view control or shell list view control.


	CShellManager *pShellManager = new CShellManager;

	// 激活“Windows Native”视觉管理器，以便在 MFC 控件中启用主题
	CMFCVisualManager::SetDefaultManager(RUNTIME_CLASS(CMFCVisualManagerWindows));

	// Standard initialization
		// If these functions are not used and want to reduce
		// The size of the final executable file, the following should be removed
		// Specific initialization routines that are not needed
		// Change the registry key used to store settings
		// TODO: The string should be modified appropriately,
		// For example, change to company or organization name
	SetRegistryKey(_T("Local application generated by AppWizard"));

	CMitacsGUIDlg dlg;
	m_pMainWnd = &dlg;
	INT_PTR nResponse = dlg.DoModal();
	if (nResponse == IDOK)
	{
		// TODO: When to put the processing here
// "OK" to close the code of the dialog box
	}
	else if (nResponse == IDCANCEL)
	{
		// TODO: When to put the processing here
// "Cancel" to close the code of the dialog box.


	}
	else if (nResponse == -1)
	{
		TRACE(traceAppMsg, 0, "Warning: Dialog creation failed and the application will terminate unexpectedly.\n");
		TRACE(traceAppMsg, 0, "Warning: If you use MFC controls on the dialog, you cannot #define _AFX_NO_MFC_CONTROLS_IN_DIALOGS.\n");
	}

	// Delete the shell manager created above.
	if (pShellManager != nullptr)
	{
		delete pShellManager;
	}

#if !defined(_AFXDLL) && !defined(_AFX_NO_MFC_CONTROLS_IN_DIALOGS)
	ControlBarCleanUp();
#endif

	// Since the dialog is closed, it will return FALSE to exit the application,
// Instead of starting the application's message pump.


	return FALSE;
}

